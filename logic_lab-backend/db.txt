CREATE TABLE questions (
  id INT PRIMARY KEY AUTO_INCREMENT,
  title VARCHAR(255),
  description TEXT,
  input_format TEXT,
  output_format TEXT,
  sample_input TEXT,
  sample_output TEXT
);

CREATE TABLE submissions (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT,
  question_id INT,
  code TEXT,
  language VARCHAR(50),
  status VARCHAR(20),
  submitted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE bookmarks (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT,
  question_id INT
);





CREATE TABLE submissions (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT,
  question_id INT,
  language VARCHAR(50),
  code TEXT,
  output TEXT,
  status VARCHAR(50),
  submitted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE bookmarks (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT,
  question_id INT,
  bookmarked_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);



CREATE TABLE subjects (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(100) NOT NULL
);


ALTER TABLE questions
ADD COLUMN subject_id INT;

-- Optional: Add foreign key constraint
ALTER TABLE questions
ADD CONSTRAINT fk_subject
FOREIGN KEY (subject_id)
REFERENCES subjects(id)
ON DELETE CASCADE;




--------------------------------------------------------------------------------


DROP TABLE IF EXISTS questions;
DROP TABLE IF EXISTS subjects;

CREATE TABLE subjects (
  id INT AUTO_INCREMENT PRIMARY KEY,
  subject_id VARCHAR(50) UNIQUE,
  name VARCHAR(100)
);

CREATE TABLE questions (
  id INT AUTO_INCREMENT PRIMARY KEY,
  subject_id VARCHAR(50),
  title VARCHAR(255),
  description TEXT,
  difficulty VARCHAR(20),
  input_format TEXT,
  output_format TEXT,
  sample_input TEXT,
  sample_output TEXT,
  FOREIGN KEY (subject_id) REFERENCES subjects(subject_id)
);
